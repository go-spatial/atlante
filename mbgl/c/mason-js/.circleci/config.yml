version: 2

step-library:
  - &install-node-4
    run:
      name: Install node
      command: |
        set +e
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
        [ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh"
        nvm install v4
        nvm alias default v4
        echo "[ -s \"${NVM_DIR}/nvm.sh\" ] && . \"${NVM_DIR}/nvm.sh\"" >> $BASH_ENV

  - &install-node-6
      run:
        name: Install node
        command: |
          set +e
          curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
          [ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh"
          nvm install v6
          nvm alias default v6
          echo "[ -s \"${NVM_DIR}/nvm.sh\" ] && . \"${NVM_DIR}/nvm.sh\"" >> $BASH_ENV

  - &build-and-test
      run:
        name: Build and test
        command: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
        
          node -v
          npm -v
          npm install
          npm test

  - &build-and-test-codecov
      run:
        name: Build and test
        command: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
        
          node -v
          npm -v
          npm install
          npm run report-coverage

jobs:
  build-osx-node-4:
    macos:
      xcode: "9.0"
    steps:
      - checkout
      - run: echo 'export NVM_DIR=${HOME}/.nvm' >> $BASH_ENV
      - *install-node-4
      - *build-and-test-codecov

  build-osx-node-6:
    macos:
      xcode: "9.0"
    steps:
      - checkout
      - run: echo 'export NVM_DIR=${HOME}/.nvm' >> $BASH_ENV
      - *install-node-6
      - *build-and-test

  build-linux-docker-node-4:
    docker:
      - image: ubuntu:trusty
    steps:
      - checkout
      - run:
          name: libstdc++ upgrade
          command: |
            apt-get update -y
            apt-get install -y software-properties-common python-software-properties || true
            add-apt-repository -y ppa:ubuntu-toolchain-r/test
            apt-get update -y
            apt-get install -y libstdc++6 curl bash git
      - run: echo 'export NVM_DIR=/opt/circleci/.nvm' >> $BASH_ENV
      - *install-node-4
      - *build-and-test

  build-linux-docker-node-6:
    docker:
      - image: ubuntu:trusty
    steps:
      - checkout
      - run:
          name: libstdc++ upgrade
          command: |
            apt-get update -y
            apt-get install -y software-properties-common python-software-properties || true
            add-apt-repository -y ppa:ubuntu-toolchain-r/test
            apt-get update -y
            apt-get install -y libstdc++6 curl bash git
      - run: echo 'export NVM_DIR=/opt/circleci/.nvm' >> $BASH_ENV
      - *install-node-6
      - *build-and-test

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-osx-node-4
      - build-osx-node-6
      - build-linux-docker-node-4      
      - build-linux-docker-node-6